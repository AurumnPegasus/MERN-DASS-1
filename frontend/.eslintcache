[{"/home/shivansh/Desktop/mern1/frontend/src/index.js":"1","/home/shivansh/Desktop/mern1/frontend/src/App.js":"2","/home/shivansh/Desktop/mern1/frontend/src/components/layout/Landing.js":"3","/home/shivansh/Desktop/mern1/frontend/src/components/layout/Navbar.js":"4","/home/shivansh/Desktop/mern1/frontend/src/components/auth/Register.js":"5","/home/shivansh/Desktop/mern1/frontend/src/components/auth/Login.js":"6"},{"size":147,"mtime":1610408903437,"results":"7","hashOfConfig":"8"},{"size":806,"mtime":1610432473404,"results":"9","hashOfConfig":"8"},{"size":1526,"mtime":1610433866571,"results":"10","hashOfConfig":"8"},{"size":598,"mtime":1610431103526,"results":"11","hashOfConfig":"8"},{"size":3087,"mtime":1610446958267,"results":"12","hashOfConfig":"8"},{"size":2301,"mtime":1610456910414,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"191uypz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shivansh/Desktop/mern1/frontend/src/index.js",[],["28","29"],"/home/shivansh/Desktop/mern1/frontend/src/App.js",[],"/home/shivansh/Desktop/mern1/frontend/src/components/layout/Landing.js",[],"/home/shivansh/Desktop/mern1/frontend/src/components/layout/Navbar.js",[],"/home/shivansh/Desktop/mern1/frontend/src/components/auth/Register.js",["30"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = () => {\n  console.log(\"At register\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [conf_pass, setConf_pass] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const newUser = {\n    name,\n    email,\n    pass,\n    conf_pass,\n  };\n\n  console.log(newUser);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col s8 offset-s2\">\n          <Link to=\"/\" className=\"btn-flat waves-effect\">\n            <i className=\"material-icons left\">keyboard_backspace</i>Back to\n            home\n          </Link>\n          <div className=\"col s12\" style={{ paddingLeft: \"11.25px\" }}>\n            <h4>\n              <b>Register</b>below\n            </h4>\n            <p className=\"grey-text text-darken-1\">\n              Already have an account?\n              <Link to=\"/login\">Log in</Link>\n            </p>\n          </div>\n          <form noValidate onSubmit={(e) => e.preventDefault()}>\n            <div className=\"input-field col s12\">\n              <input\n                id=\"name\"\n                type=\"text\"\n                value={name}\n                error={errors.name}\n                onChange={(e) => setName(e.target.value)}\n              />\n              <label htmlFor=\"name\">Name</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n              />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                onChange={(e) => setPass(e.target.value)}\n                value={pass}\n                error={errors.pass}\n                id=\"pass\"\n                type=\"password\"\n              />\n              <label htmlFor=\"pass\">Password</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <input\n                onChange={(e) => setConf_pass(e.target.value)}\n                value={conf_pass}\n                error={errors.conf_pass}\n                id=\"conf_pass\"\n                type=\"password\"\n              />\n              <label htmlFor=\"conf_pass\">Confirm Password</label>\n            </div>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.25px\" }}>\n              <button\n                style={{\n                  width: \"150px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                  marginTop: \"1rem\",\n                }}\n                type=\"submit\"\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Sign up\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/shivansh/Desktop/mern1/frontend/src/components/auth/Login.js",["31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":10,"column":18,"nodeType":"40","messageId":"41","endLine":10,"endColumn":27},{"ruleId":"38","severity":1,"message":"39","line":7,"column":18,"nodeType":"40","messageId":"41","endLine":7,"endColumn":27},{"ruleId":"38","severity":1,"message":"42","line":9,"column":9,"nodeType":"40","messageId":"41","endLine":9,"endColumn":17},{"ruleId":"43","severity":2,"message":"44","line":15,"column":5,"nodeType":"40","messageId":"45","endLine":15,"endColumn":10},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","no-undef","'axios' is not defined.","undef","no-global-assign","no-unsafe-negation"]